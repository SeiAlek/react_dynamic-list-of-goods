{"version":3,"sources":["api/getGoods.tsx","components/GoodsList.tsx","App.tsx","index.tsx"],"names":["getGoods","a","fetch","response","json","goods","GoodsList","className","map","good","key","id","style","color","name","FILTER_TYPES","FILTER_BUTTONS","type","App","state","isLoading","loadGoods","param","setState","then","filterGoods","finally","filter","sort","b","localeCompare","slice","this","button","onClick","max","Component","ReactDOM","render","document","getElementById"],"mappings":"+OAEaA,EAAQ,uCAAG,8BAAAC,EAAA,sEACCC,MAHT,yEAEQ,cAChBC,EADgB,gBAEFA,EAASC,OAFP,cAEhBC,EAFgB,yBAIfA,GAJe,2CAAH,qDCKRC,EAA6B,SAAC,GAAD,IAAGD,EAAH,EAAGA,MAAH,OACxC,yBAAKE,UAAU,WACb,4BACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,wBAAIC,IAAKD,EAAKE,GAAIC,MAAO,CAAEC,MAAOJ,EAAKI,QACpCJ,EAAKK,YCRVC,EAEO,gBAFPA,EAGC,MAGDC,EAAiB,CACrB,CACEL,GAAI,IACJM,KARG,YASHH,KAAM,aAER,CACEH,GAAI,IACJM,KAAMF,EACND,KAAM,iBAER,CACEH,GAAI,IACJM,KAAMF,EACND,KAAM,cAyEKI,E,4MAzDbC,MAAQ,CACNd,MAAO,GACPe,WAAW,G,EAGbC,U,uCAAY,WAAOC,GAAP,SAAArB,EAAA,sDACV,EAAKsB,SAAS,CAAEH,WAAW,IAE3BpB,IACGwB,MAAK,SAAAnB,GAAK,OAAI,EAAKoB,YAAYpB,EAAOiB,MACtCE,MAAK,SAAAnB,GAAK,OAAI,EAAKkB,SAAS,CAAElB,aAC9BqB,SAAQ,WACP,EAAKH,SAAS,CAAEH,WAAW,OAPrB,2C,wDAWZK,Y,uCAAc,WAAOpB,EAAeiB,GAAtB,SAAArB,EAAA,yDACRqB,IAAUP,EADF,yCAEHV,EAAMsB,QAAO,SAAClB,GAAD,OAAgBA,EAAKI,QAAUS,MAAU,IAFnD,UAKRA,IAAUP,EALF,yCAMHV,EAAMuB,MAAK,SAAC3B,EAAS4B,GAAV,OAAsB5B,EAAEa,KAAKgB,cAAcD,EAAEf,SAAOiB,MAAM,EAAG,IAAM,IAN3E,gCASL1B,GATK,2C,+GAYJ,IAAD,SACsB2B,KAAKb,MAA1Bd,EADD,EACCA,MAAOe,EADR,EACQA,UAEf,OACE,6BAASb,UAAU,WACjB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,SAAd,yBACA,yBAAKA,UAAU,WACZS,EAAeR,KAAI,SAAAyB,GAAM,OACxB,4BACEvB,IAAKuB,EAAOtB,GACZM,KAAK,SACLV,UAAU,SACV2B,QAAS,kBAAM,EAAKb,UAAUY,EAAOhB,QAEpCgB,EAAOnB,UAIbM,GACC,8BAAUb,UAAU,4BAA4B4B,IAAI,QAEtD,kBAAC,EAAD,CAAW9B,MAAOA,U,GAnDV+B,aCnClBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.eb2e2188.chunk.js","sourcesContent":["const API_URL = 'https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json';\n\nexport const getGoods = async () => {\n  const response = await fetch(API_URL);\n  const goods = await response.json();\n\n  return goods;\n};\n","import React from 'react';\nimport { Good } from './Interface';\n\ninterface Props {\n  goods: Good[];\n}\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <div className=\"content\">\n    <ul>\n      {goods.map(good => (\n        <li key={good.id} style={{ color: good.color }}>\n          {good.name}\n        </li>\n      ))}\n    </ul>\n  </div>\n);\n","import React, { Component } from 'react';\nimport { getGoods } from './api';\nimport { GoodsList } from './components/GoodsList';\n\nconst FILTER_TYPES = {\n  all: 'All goods',\n  firstFive: '5 first goods',\n  red: 'red',\n};\n\nconst FILTER_BUTTONS = [\n  {\n    id: '1',\n    type: FILTER_TYPES.all,\n    name: 'All goods',\n  },\n  {\n    id: '2',\n    type: FILTER_TYPES.firstFive,\n    name: '5 first goods',\n  },\n  {\n    id: '3',\n    type: FILTER_TYPES.red,\n    name: 'Red goods',\n  },\n];\n\ninterface Good {\n  id: number;\n  name: string;\n  color: string;\n}\n\ninterface State {\n  goods: Good[];\n  isLoading: boolean;\n}\n\nclass App extends Component<{}, State> {\n  state = {\n    goods: [],\n    isLoading: false,\n  };\n\n  loadGoods = async (param: string) => {\n    this.setState({ isLoading: true });\n\n    getGoods()\n      .then(goods => this.filterGoods(goods, param))\n      .then(goods => this.setState({ goods }))\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  filterGoods = async (goods: Good[], param: string) => {\n    if (param === FILTER_TYPES.red) {\n      return goods.filter((good: Good) => good.color === param) || [];\n    }\n\n    if (param === FILTER_TYPES.firstFive) {\n      return goods.sort((a: Good, b: Good) => a.name.localeCompare(b.name)).slice(0, 5) || [];\n    }\n\n    return goods;\n  };\n\n  render() {\n    const { goods, isLoading } = this.state;\n\n    return (\n      <section className=\"section\">\n        <div className=\"container\">\n          <h1 className=\"title\">Dynamic list of Goods</h1>\n          <div className=\"buttons\">\n            {FILTER_BUTTONS.map(button => (\n              <button\n                key={button.id}\n                type=\"button\"\n                className=\"button\"\n                onClick={() => this.loadGoods(button.type)}\n              >\n                {button.name}\n              </button>\n            ))}\n          </div>\n          {isLoading && (\n            <progress className=\"progress is-small is-info\" max=\"100\" />\n          )}\n          <GoodsList goods={goods} />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}